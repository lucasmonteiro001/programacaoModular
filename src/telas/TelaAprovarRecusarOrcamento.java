/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import com.MySQLConnector.MySQLConnector;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;


/**
 *
 * @author Luisa
 */
public class TelaAprovarRecusarOrcamento extends javax.swing.JFrame {

    /**
     * Creates new form TelaAprovarRecusarOrcamento
     */
    public TelaAprovarRecusarOrcamento() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cpfCliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Aceite = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Aprovar = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("CPF");

        cpfCliente.setText("Insira aqui seu CPF para verificação das suas solicitaçãoes");
        cpfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfClienteActionPerformed(evt);
            }
        });

        Aceite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Número OS", "Descrição Serviço", "Valor Serviço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Aceite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AceiteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Aceite);

        jLabel4.setText("OS's a aprovar/recusar - Clique duas vezes sobre a OS para aprová-la ou recusá-la");

        Aprovar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Número OS", "Descrição Serviço", "Valor Serviço", "Prazo Orçamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Aprovar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AprovarMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Aprovar);

        jButton1.setText("Buscar OS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Aceite de Serviço - Clique duas vezes sobre a OS para dar o aceite do serviço e emitir a fatura");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                        .addComponent(jScrollPane3)
                        .addComponent(jLabel4)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cpfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfClienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Integer idCliente = 0;
            
        try{
            //pegando id cliente
            String verificaIdClienteSQL = "select idCliente from cliente where cpf = " + "(?)";
            PreparedStatement preparedStatementCliente = MySQLConnector.conn.prepareStatement(verificaIdClienteSQL);
            preparedStatementCliente.setString(1, this.cpfCliente.getText());
            ResultSet rs = preparedStatementCliente.executeQuery(); 
            if(rs != null && rs.next()){
                idCliente = rs.getInt("idCliente");
            }              
        
            //pegando os a aprovar
            String selectTableSQLOS = "Select idOS, descricaoOrcamento,valorServico, prazoOrcamento"
                    + " from orcamento where idCliente = " + idCliente + " and idStatus = 3 order by 1 limit 6";
            PreparedStatement preparedStatement = MySQLConnector.conn.prepareStatement(selectTableSQLOS);
            ResultSet rsOSAprovar = preparedStatement.executeQuery(); 
            
            String selectTableSQLOSAceite = "Select idOS, descricaoOrcamento,valorServico "
                    + "from orcamento where idCliente = " + idCliente + " and idStatus = 6 order by 1 limit 4";
            PreparedStatement preparedStatementAceite = MySQLConnector.conn.prepareStatement(selectTableSQLOSAceite);
            ResultSet rsOSAceite = preparedStatementAceite.executeQuery();
            
            //inicializando a tabela
            int row = 0;
            //populando tabela
            while(rsOSAprovar.next()){                
                this.Aprovar.setValueAt(rsOSAprovar.getInt("idOS"), row, 0);
                this.Aprovar.setValueAt(rsOSAprovar.getString("descricaoOrcamento"), row, 1);
                this.Aprovar.setValueAt(rsOSAprovar.getDouble("valorServico"), row, 2);    
                this.Aprovar.setValueAt(rsOSAprovar.getDate("prazoOrcamento"), row, 3);
                row++;
            }
            row = 0;
            while(rsOSAceite.next()){                
                this.Aceite.setValueAt(rsOSAceite.getInt("idOS"), row, 0);
                this.Aceite.setValueAt(rsOSAceite.getString("descricaoOrcamento"), row, 1);
                this.Aceite.setValueAt(rsOSAceite.getDouble("valorServico"), row, 2);                
                row++;
            }
        
        }catch (Exception e) {
            e.printStackTrace();
        }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AceiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AceiteMouseClicked
        JTable target = (JTable)evt.getSource();
        int idOS = (Integer)this.Aceite.getValueAt(target.getSelectedRow(), 0);
        int idStatus = 0;
        Object[] options = { "Aceitar", "Recusar" };
        int recusou = JOptionPane.showOptionDialog(null, "Clique em 'Aceitar' para dar o Aceite no serviço realizado"
                + " e gerar sua fatura", "Aceite Serviço",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        if(recusou == 1){
            JOptionPane.showMessageDialog(this, "Serviço recusado.");
        }
        else{
            idStatus = 8;
            try{
                String setStatusOrcamento = "update orcamento set idStatus =" + idStatus + " where idOS =" + idOS;
                PreparedStatement preparedStatementsetTecnico = MySQLConnector.conn.prepareStatement(setStatusOrcamento);
                preparedStatementsetTecnico.executeUpdate(setStatusOrcamento); 

                String selectinfoOS = "Select idOS, descricaoOrcamento,valorServico "
                        + "from orcamento where idOS = " + idOS;
                PreparedStatement preparedStatementOS = MySQLConnector.conn.prepareStatement(selectinfoOS);
                ResultSet rsOS = preparedStatementOS.executeQuery();
                if(rsOS.next()){
                    JOptionPane.showMessageDialog(this, "Fatura do Serviço:\n"
                            + "Número da OS: " + rsOS.getString("idOS") 
                            + "\nServiço Realizado: " + rsOS.getString("descricaoOrcamento") 
                            + "\nValor do Serviço: " + rsOS.getString("valorServico")
                            );
                }
            }          
            catch (Exception e){
                e.printStackTrace();
            }
        }
        this.dispose();
                           
    }//GEN-LAST:event_AceiteMouseClicked

    private void AprovarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AprovarMouseClicked
        JTable target = (JTable)evt.getSource();
        int idOS = (Integer)this.Aprovar.getValueAt(target.getSelectedRow(), 0);
        int idStatus = 0;
        Object[] options = { "Aprovar", "Recusar" };
        int recusou = JOptionPane.showOptionDialog(null, "Clique na ação desejada para a OS selecionada", "Aprovar/Recusar Orcamento",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        if(recusou == 1){
            idStatus = 9;
            JOptionPane.showMessageDialog(this, "Sua OS foi recusada, esperamos seu retorno.");
        }
        else{
            idStatus = 4;
            JOptionPane.showMessageDialog(this, "Sua OS foi aprovada. Em breve o serviço desejado será concluido.");
        }
        try{
            String setStatusOrcamento = "update orcamento set idStatus =" + idStatus + " where idOS =" + idOS;
            PreparedStatement preparedStatementsetTecnico = MySQLConnector.conn.prepareStatement(setStatusOrcamento);
            preparedStatementsetTecnico.executeUpdate(setStatusOrcamento); 
        }
        catch (Exception e){
            e.printStackTrace();
        }
        this.dispose();
    }//GEN-LAST:event_AprovarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAprovarRecusarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAprovarRecusarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAprovarRecusarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAprovarRecusarOrcamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAprovarRecusarOrcamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Aceite;
    private javax.swing.JTable Aprovar;
    private javax.swing.JTextField cpfCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
